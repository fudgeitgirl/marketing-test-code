{"ast":null,"code":"export const APIcall = () => {\n  fetch(\"http://127.0.0.1:8000/graphql\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `query getProductById {\n\t\t\t\t\t\t  product(productId: 1) {\n\t\t\t\t\t\t    id\n\t\t\t\t\t\t    name\n\t\t\t\t\t\t    power\n\t\t\t\t\t\t    description\n\t\t\t\t\t\t    price\n\t\t\t\t\t\t    quantity\n\t\t\t\t\t\t    brand\n\t\t\t\t\t\t    weight\n\t\t\t\t\t\t    height\n\t\t\t\t\t\t    width\n\t\t\t\t\t\t    length\n\t\t\t\t\t\t    modelCode\n\t\t\t\t\t\t    colour\n\t\t\t\t\t\t    imgUrl\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}`\n    })\n  }).then(res => res.json()).then(result => {\n    console.log(result.data);\n    this.setState({\n      isLoaded: true,\n      data: result.data.product\n    });\n  }, // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  error => {\n    this.setState({\n      isLoaded: true,\n      error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/lukekeast/Downloads/marketing-code-test/octopus/client/src/services/apicall.js"],"names":["APIcall","fetch","method","headers","body","JSON","stringify","query","then","res","json","result","console","log","data","setState","isLoaded","product","error"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,MAAM;AAC7BC,EAAAA,KAAK,CAAC,+BAAD,EAAkC;AACjCC,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,MAAAA,KAAK,EAAG;;;;;;;;;;;;;;;;;;AADY,KAAf;AAL2B,GAAlC,CAAL,CA0BQC,IA1BR,CA0BaC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EA1BpB,EA2BQF,IA3BR,CA6BUG,MAAD,IAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACC,SAAKC,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAE,IADE;AAEZF,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAAP,CAAYG;AAFN,KAAd;AAID,GAnCV,EAoCS;AACA;AACA;AACCC,EAAAA,KAAD,IAAW;AACT,SAAKH,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAE,IADE;AAEZE,MAAAA;AAFY,KAAd;AAID,GA5CV;AA8CK,CA/CE","sourcesContent":["export const APIcall = () => {\nfetch(\"http://127.0.0.1:8000/graphql\", {\n\t    \tmethod: 'POST',\n\t    \theaders: {\n\t    \t\t'Content-Type': 'application/json'\n\t    \t},\n\t    \tbody: JSON.stringify({\n\t    \t\tquery: `query getProductById {\n\t\t\t\t\t\t  product(productId: 1) {\n\t\t\t\t\t\t    id\n\t\t\t\t\t\t    name\n\t\t\t\t\t\t    power\n\t\t\t\t\t\t    description\n\t\t\t\t\t\t    price\n\t\t\t\t\t\t    quantity\n\t\t\t\t\t\t    brand\n\t\t\t\t\t\t    weight\n\t\t\t\t\t\t    height\n\t\t\t\t\t\t    width\n\t\t\t\t\t\t    length\n\t\t\t\t\t\t    modelCode\n\t\t\t\t\t\t    colour\n\t\t\t\t\t\t    imgUrl\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}`\n\t    \t})\n\t    })\n\t      .then(res => res.json())\n\t      .then(\n\n\t        (result) => {\n\t        \tconsole.log(result.data)\n\t          this.setState({\t          \t\n\t            isLoaded: true,\n\t            data: result.data.product\n\t          });\n\t        },\n\t        // Note: it's important to handle errors here\n\t        // instead of a catch() block so that we don't swallow\n\t        // exceptions from actual bugs in components.\n\t        (error) => {\n\t          this.setState({\n\t            isLoaded: true,\n\t            error\n\t          });\n\t        }\n\t      )\n\t   };"]},"metadata":{},"sourceType":"module"}