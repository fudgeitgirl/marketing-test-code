{"ast":null,"code":"var _jsxFileName = \"/Users/lukekeast/Downloads/marketing-code-test/octopus/client/src/App.jsx\";\nimport React, { Component, useContext } from 'react';\nimport PageBuilder from './pageBuilder';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://127.0.0.1:8000/graphql\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `query getProductById {\n\t\t\t\t\t\t  product(productId: 1) {\n\t\t\t\t\t\t    id\n\t\t\t\t\t\t    name\n\t\t\t\t\t\t    power\n\t\t\t\t\t\t    description\n\t\t\t\t\t\t    price\n\t\t\t\t\t\t    quantity\n\t\t\t\t\t\t    brand\n\t\t\t\t\t\t    weight\n\t\t\t\t\t\t    height\n\t\t\t\t\t\t    width\n\t\t\t\t\t\t    length\n\t\t\t\t\t\t    modelCode\n\t\t\t\t\t\t    colour\n\t\t\t\t\t\t    imgUrl\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}`\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result.data);\n      this.setState({\n        isLoaded: true,\n        data: result.data.product\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(PageBuilder, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lukekeast/Downloads/marketing-code-test/octopus/client/src/App.jsx"],"names":["React","Component","useContext","PageBuilder","App","constructor","props","state","error","isLoaded","data","componentDidMount","fetch","method","headers","body","JSON","stringify","query","then","res","json","result","console","log","setState","product","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACRC,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,QAAQ,EAAE,KAFF;AAGRC,MAAAA,IAAI,EAAE;AAHE,KAAb;AAMA;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAF6B;AAKtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,KAAK,EAAG;;;;;;;;;;;;;;;;;;AADY,OAAf;AALgC,KAAlC,CAAL,CA0BGC,IA1BH,CA0BQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EA1Bf,EA2BGF,IA3BH,CA4BKG,MAAD,IAAY;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACZ,IAAnB;AACC,WAAKe,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEY,MAAM,CAACZ,IAAP,CAAYgB;AAFN,OAAd;AAID,KAlCL,EAmCI;AACA;AACA;AACClB,IAAAA,KAAD,IAAW;AACT,WAAKiB,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KA3CL;AA6CA;;AAEJmB,EAAAA,MAAM,GAAG;AAAA,UACAjB,IADA,GACS,KAAKH,KADd,CACAG,IADA;AAEL,WACC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGH;;AA/DyB;;AAkE3B,eAAeN,GAAf","sourcesContent":["import React, {Component, useContext} from 'react';\nimport PageBuilder from './pageBuilder';\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t      error: null,\n\t      isLoaded: false,\n\t      data: {}\n\t    };\n\t    \n\t}\n\tcomponentDidMount() {\n\t    fetch(\"http://127.0.0.1:8000/graphql\", {\n\t    \tmethod: 'POST',\n\t    \theaders: {\n\t    \t\t'Content-Type': 'application/json'\n\t    \t},\n\t    \tbody: JSON.stringify({\n\t    \t\tquery: `query getProductById {\n\t\t\t\t\t\t  product(productId: 1) {\n\t\t\t\t\t\t    id\n\t\t\t\t\t\t    name\n\t\t\t\t\t\t    power\n\t\t\t\t\t\t    description\n\t\t\t\t\t\t    price\n\t\t\t\t\t\t    quantity\n\t\t\t\t\t\t    brand\n\t\t\t\t\t\t    weight\n\t\t\t\t\t\t    height\n\t\t\t\t\t\t    width\n\t\t\t\t\t\t    length\n\t\t\t\t\t\t    modelCode\n\t\t\t\t\t\t    colour\n\t\t\t\t\t\t    imgUrl\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}`\n\t    \t})\n\t    })\n\t      .then(res => res.json())\n\t      .then(\n\t        (result) => {\n\t        \tconsole.log(result.data)\n\t          this.setState({\t          \t\n\t            isLoaded: true,\n\t            data: result.data.product\n\t          });\n\t        },\n\t        // Note: it's important to handle errors here\n\t        // instead of a catch() block so that we don't swallow\n\t        // exceptions from actual bugs in components.\n\t        (error) => {\n\t          this.setState({\n\t            isLoaded: true,\n\t            error\n\t          });\n\t        }\n\t      )\n\t   }\n\t\n\trender() {\n\t\tconst { data } = this.state;\n\t    return (\n\t    \t<PageBuilder data={data} />\n\t    )\n\t};\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}